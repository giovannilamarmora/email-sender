# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Stg EmailSender Deploy

on:
  push:
    branches: [ develop ]

jobs:
  setting-up:
    name: ‚òÅÔ∏è Setting Up
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: üöÄ Setting Up Deployment Package
        run: echo Process Started!!!

  java:
    name: üîß Java 11
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: üîß Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

  install:
    name: üå± Install
    runs-on: ubuntu-latest
    environment:
      name: stg-email-sender
    permissions:
      contents: write
      actions: write
      repository-projects: write
      packages: write
    needs: [ setting-up, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: Install with Maven
        run: mvn -X clean install
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}

  test:
    name: üìÇ Test
    runs-on: ubuntu-latest
    environment:
      name: stg-email-sender
    needs: [ install, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: üìÇ Test with Maven
        run: mvn test
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}

  build:
    name: üìÇ Build
    runs-on: ubuntu-latest
    environment:
      name: stg-email-sender
    needs: [ test, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    environment:
      name: stg-email-sender
      url: https://hub.docker.com/repository/docker/giovannilamarmora/email-sender/general
    needs: [ java, build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install #-DskipTests
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          buildArgs: DEPLOY=STG
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Remove File
        uses: JesseTG/rm@v1.0.3
        with:
          path: /Dockerfile