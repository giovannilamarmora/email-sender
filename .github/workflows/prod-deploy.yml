# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Prod EmailSender Deploy

on:
  push:
    branches: [ master ]

jobs:
  setting-up:
    name: ☁️ Setting Up
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🚀 Setting Up Deployment Package
        run: echo Process Started!!!

  java:
    name: 🔧 Java 11
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: 🔧 Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

  install:
    name: 🌱 Install
    runs-on: ubuntu-latest
    environment:
      name: prod-email-sender
    permissions:
      contents: write
      actions: write
      repository-projects: write
      packages: write
    needs: [ setting-up, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: Install with Maven
        run: mvn -X clean install

  test:
    name: 📂 Test
    runs-on: ubuntu-latest
    environment:
      name: prod-email-sender
    needs: [ install, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: 📂 Test with Maven
        run: mvn test

  build:
    name: 📂 Build
    runs-on: ubuntu-latest
    environment:
      name: prod-email-sender
    needs: [ test, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: prod-email-sender
    needs: [ java, build ]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        url: https://prod-email-sender.herokuapp.com/
        with:
          heroku_api_key: HEROKU_API_KEY
          heroku_app_name: HEROKU_APP_NAME #Must be unique in Heroku
          heroku_email: HEROKU_EMAIL
