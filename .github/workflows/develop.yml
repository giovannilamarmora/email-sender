# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Develop

on:
  pull_request:
    branches: [ develop ]

jobs:
  setting-up:
    name: ‚òÅÔ∏è Setting Up
    runs-on: ubuntu-latest
    environment:
      name: stg-email-sender
    permissions:
      contents: read
      packages: write

    steps:
      - name: üöÄ Setting Up Deployment Package
        run: echo Process Started!!!
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
          HEROKU_APP_NAME: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
          HEROKU_EMAIL: ${{secrets.HEROKU_EMAIL}}

  java:
    name: üîß Java 11
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: üîß Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

  install:
    name: üå± Install
    runs-on: ubuntu-latest
    needs: [ setting-up, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      #- name: Setup settings-xml
      #  uses: whelk-io/maven-settings-xml-action@v20
      #  with:
      #    repositories: '[{ "id": "central", "url": "https://repo1.maven.org/maven2" }]'
      #    plugin_repositories: '[{ "id": "github", "url": "https://maven.pkg.github.com/giovannilamarmora/utils" }]'
      #    servers: '[{ "id": "github", "username": "${GITHUB_USERNAME}", "password": "${API_TOKEN_GITHUB}" }]'
      #    output_file: .m2/settings.xml
      - name: Install with Maven
        run: mvn -X clean install
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}


  test:
    name: üìÇ Test
    runs-on: ubuntu-latest
    needs: [ install, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: üìÇ Test with Maven
        run: mvn test
        #env:
        #  GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
        #  API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}

  build:
    name: üìÇ Build
    runs-on: ubuntu-latest
    needs: [ test, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_USERNAME  # env variable name for username
          server-password: API_TOKEN_GITHUB # env variable name for GitHub Personal Access Token
      - name: Build with Maven
        run: mvn -B package --file pom.xml
